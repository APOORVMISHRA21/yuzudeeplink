{
  "title": "Specifiche del modello",
  "basic": "Di base",
  "wildcard_title": "Wildcard",
  "wildcard_sharp_info": "Corrisponde ad un singolo carattere numerico(0-9) (interpretato come '\\d')",
  "wildcard_question_info": "Corrisponde a qualsiasi carattere singolo (interpretato come '.')",
  "wildcard_asterisk_info": "Corrisponde a qualsiasi zero o più caratteri (interpretato come '.*')",
  "wildcard_plus_info": "Corrisponde ad uno o più caratteri (interpretati come '.+')",
  "wildcard_escape": "Se si desidera utilizzare questi caratteri come lettere ordinarie, anteporre la barra rovesciata.",
  "wildcard_regexp": "Inoltre, puoi usare l'espressione regolare circondando con<code>[]</code>.",
  "wildcard_case": "Tutti i modelli si distinguono tra lettere maiuscole e minuscole.",
  "wildcard_desc_title": "Descrizione Wildcard",
  "wildcard_desc_sharp": "Wildcard'#'",
  "wildcard_desc_sharp_info": "'#' corrisponde a 0-9 uno dei numeri.",
  "wildcard_desc_sharp_ex1": "ex.1)Stringa modello = <code>IMG#.jpg</code>",
  "wildcard_desc_sharp_ex1_info": "Se un URL include <code>IMG0.jpg</code> or <code>IMG1.jpg</code> or ... or <code>IMG8.jpg</code> o <code>IMG9.jpg</code>, corrisponde.",
  "wildcard_desc_sharp_ex1_but": "Nel caso in cui <code>http://www.test.com/IMG.jpg</code>, poiché un numero non viene dopo \"IMG\", questo URL non corrisponde.",
  "wildcard_desc_sharp_ex2": "ex.2)Stringa modello = <code>IMG###.jpg</code>",
  "wildcard_desc_sharp_ex2_info": "Se un URL include <code>IMG000.jpg</code> o <code>IMG001.jpg</code> o ... o <code>IMG998.jpg</code> oo <code>IMG999.jpg</code>, corrisponde.",
  "wildcard_desc_sharp_ex2_but": "Nel caso in cui <code>http://www.test.com/IMG0a1.jpg</code>, poiché non include tre valori numerici consecutivi, questo URL non corrisponde.",
  "wildcard_desc_question": "Wildcard'?'",
  "wildcard_desc_question_info": "'?' corrisponde a qualsiasi singolo carattere.",
  "wildcard_desc_question_ex1": "ex.1)Stringa modello = <code>IMG_?.jpg</code>",
  "wildcard_desc_question_ex1_info": "Se un URL include l'espressione in cui viene inserito qualche carattere tra <code>IMG_</code> e <code>.jpg</code>, corrisponde.",
  "wildcard_desc_question_ex1_ex": "Nel caso di <code>http://www.test.com/IMG_l.jpg</code>, questo URL corrisponde.",
  "wildcard_desc_question_ex2": "ex.2)Stringa modello = <code>IMG_???.jpg</code>",
  "wildcard_desc_question_ex2_info": "Questo modello corrisponde all'URL in cui sono inseriti alcuni tre caratteri tra <code>IMG_</code> e <code>.jpg</code>.",
  "wildcard_desc_asterisk": "Wildcard'*'",
  "wildcard_desc_asterisk_info": "'*' corrisponde a qualsiasi zero o più caratteri.",
  "wildcard_desc_asterisk_ex": "ex.)Stringa modello = <code>IMG_*.jpg</code>",
  "wildcard_desc_asterisk_ex_info": "Se un URL include l'espressione che alcuni zero o più caratteri sono inseriti tra <code>IMG_</code> e <code>.jpg</code>, corrisponde.",
  "wildcard_desc_asterisk_ex_info_ex": "Pertanto corrisponde sia a <code>IMG_.jpg</code>, <code>IMG_000.jpg</code> e <code>IMG_000abc.jpg</code>.",
  "wildcard_desc_plus": "Wildcard'+'",
  "wildcard_desc_plus_info": "'+' corrisponde a uno o più caratteri.",
  "wildcard_desc_plus_ex": "ex.)Stringa modello = <code>IMG_+.jpg</code>",
  "wildcard_desc_plus_ex_info": "Se un URL include l'espressione in cui sono inseriti uno o più caratteri tra <code>IMG_</code> e <code>.jpg</code>, corrisponde.",
  "wildcard_desc_plus_ex_not": "Pertanto corrisponde sia a <code>IMG_.jpg</code>, <code>IMG_000.jpg</code> e <code>IMG_000abc.jpg</code>.",
  "wildcard_desc_plus_ex_then": "Non corrisponde, se non c'è niente tra <code>IMG_</code> e <code>.jpg</code>.",
  "wildcard_desc_regexp": "Espressione regolare",
  "wildcard_desc_regexp_info": "Il modello racchiuso tra '[]' viene trattato come un'espressione regolare.<br>Le espressioni regolari sono conformi alle specifiche Java.",
  "wildcard_desc_regexp_ex": "ex.)<code>[https?://www\\.test\\.com/IMG_*\\.jpg]</code>",
  "pattern_title": "Corrispondenza modelli",
  "pattern_info": "Se non si applica uno schema come <code>http://</code>, sarà automaticamente integrato (aggiungi <code>^\\w+://</code>)",
  "pattern_ex": "Se crei un modello come <code>*test.com</code>, corrisponderà all'URL, come ad esempio <code>http://other.com/?page=test.com</code>.",
  "pattern_sub_domain": "Se si desidera sostituire un sottodominio",
  "pattern_sub_domain_info": "Inizia con <code>*.</code>or <code>http://*.</code>. (Sostituire <code>*.</code> con <code>((?![./]).)*</code>)",
  "pattern_sub_domain_ex": "ex.)Stringa modello =<code>*.test.com</code>",
  "pattern_sub_domain_match": "Corrisponde a <code>mobile.test.com</code>, <code>doc.test.com</code>",
  "pattern_sub_domain_not": "Tuttavia, <code>mobile.doc.test.com</code> non corrisponde perché contiene il sottodominio<code>.</code>.",
  "pattern_https": "Se il modello inizia con <code>http*://</code>",
  "pattern_https_info": "Questo non è necessario perché questa parte è automaticamente completata dal browser.",
  "pattern_https_replace": "Questa descrizione sarà sostituita internamente da <code>https?://</code> per evitare falsi positivi.",
  "ad_block_title": "Ad block",
  "ad_block_not_wildcard": "Se non si utilizzano wildcard, sarà più veloce.",
  "ad_block_not_regex": "Inoltre, le prestazioni sono peggiori se esiste un modello complesso nell'espressione regolare.",
  "ad_block_not_use_wildcard": "Se non usi wildcard wildcard(<code>#?*+</code>)",
  "ad_block_not_use_wildcard_info": "Se c'è una stringa specifica nell'URL, bloccala.",
  "ad_block_not_use_wildcard_ex": "ex.)Stringa modello =<code>ad.jpg</code>",
  "ad_block_not_use_wildcard_ex_info": "Blocca <code>http://test.com/ad/ad.jpg</code>, <code>https://test.jp/ad/img/ad.jpg</code> etc.",
  "ad_block_use_wildcard": "Se non usi wildcard(<code>#?*+</code>)",
  "ad_block_use_wildcard_info": "ex.)Stringa modello =<code>/ad/+.jpg</code>",
  "ad_block_host": "Blocco Host",
  "ad_block_host_info": "Blocca tutti gli host specificati.",
  "ad_block_host_perfect": "Corrispondenza perfetta",
  "ad_block_host_perfect_info": "<code>h ad.test.com</code> Specifica mettendo uno spazio dopo la 'h'.",
  "ad_block_host_perfect_info_ex": "E' utile per bloccare <code>http://ad.test.com</code> senza bloccare <code>http://test.com</code>.",
  "ad_block_host_perfect_info_wildcard": "Anche le Wild cards possono essere utilizzate.",
  "ad_block_host_perfect_ex": "ex.)<code>h ad.+.com</code>, <code>h ad.test.*</code>",
  "ad_block_host_perfect_hosts": "<code>127.0.0.1 ad.com</code> può anche essere specificato in un formato host, come da esempio.",
  "ad_block_host_partial": "Corrispondenza parziale",
  "ad_block_host_partial_info": "<code>c ad.com</code> Specifica mettendo uno spazio dopo la 'c'.",
  "ad_block_host_partial_info_ex": "Blocca <code>http://ad.com</code>, <code>http://abc.ad.com</code>, <code>http://ad001.ad.com</code> etc.",
  "ad_block_host_partial_not_wildcard": "<font color=\"red\">Le Wild cards NON possono essere utilizzate.</font>",
  "ad_block_host_regex": "Quando si utilizzano espressioni regolari nel blocco host",
  "ad_block_host_regex_info": "<code>h [test\\.com]</code> può essere specificato."
}
