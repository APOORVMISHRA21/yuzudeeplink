{
  "title": "Spezifikation Mustervergleich",
  "basic": "Grundlage",
  "wildcard_title": "Wildcard (Platzhalter)",
  "wildcard_sharp_info": "Entspricht einem einzelnen numerischen (0-9) Zeichen (interpretiert als'\\d')",
  "wildcard_question_info": "Entspricht einem beliebigen einzelnen Zeichen (interpretiert als '.')",
  "wildcard_asterisk_info": "Entspricht keinem oder mehreren Zeichen (interpretiert als '.*')",
  "wildcard_plus_info": "Entspricht einem oder mehreren Zeichen (interpretiert als '.+')",
  "wildcard_escape": "Wenn Sie die Zeichen #,?,*,+ dagegen als normale Zeichen verwenden möchten, müssen Sie einen Backslash ('\\') vor das jeweilige Zeichen setzen (Maskierung):",
  "wildcard_regexp": "Sie können auch einen regulären Ausdruck verwenden, indem Sie ihn mit<code>[]</code>.<br> umschließen.",
  "wildcard_case": "Mustervergleiche unterscheiden immer zwischen Groß- und Kleinbuchstaben.",
  "wildcard_desc_title": "Wildcard (Platzhalter) Beschreibung",
  "wildcard_desc_sharp": "Wildcard '#'",
  "wildcard_desc_sharp_info": "'#' entspricht \"einer der Zahlen 0-9\".",
  "wildcard_desc_sharp_ex1": "z.B.1) Pattern string = <code>IMG#.jpg</code>",
  "wildcard_desc_sharp_ex1_info": "Wenn eine URL <code>IMG0.jpg</code> oder <code>IMG1.jpg</code> oder ... oder <code>IMG8.jpg</code> oder <code>IMG9.jpg</code> enthält, wird sie gefunden.",
  "wildcard_desc_sharp_ex1_but": "Im Falle von <code>http://www.test.com/IMG.jpg</code> wird diese URL nicht gefunden, weil keine Zahl nach \"IMG\" folgt.",
  "wildcard_desc_sharp_ex2": "z.B.2) Pattern string = <code>IMG###.jpg</code>",
  "wildcard_desc_sharp_ex2_info": "Wenn eine URL <code>IMG000.jpg</code> oder <code>IMG001.jpg</code> oder ... oder <code>IMG998.jpg</code> oder <code>IMG999.jpg</code> enthält, wird sie gefunden.",
  "wildcard_desc_sharp_ex2_but": "Im Falle von <code>http://www.test.com/IMG0a1.jpg</code>, wird diese URL nicht gefunden, da sie keine drei aufeinanderfolgenden Zahlenwerte enthält.",
  "wildcard_desc_question": "Wildcard '?'",
  "wildcard_desc_question_info": "'?' entspricht einem beliebigen \"Einzelzeichen\".",
  "wildcard_desc_question_ex1": "z.B.1) Pattern string = <code>IMG_?.jpg</code>",
  "wildcard_desc_question_ex1_info": "Wenn eine URL den Ausdruck 'ein beliebiges Einzelzeichen' zwischen <code>IMG_</code> und <code>.jpg</code> enthält, wird sie gefunden.",
  "wildcard_desc_question_ex1_ex": "Im Falle von <code>http://www.test.com/IMG_l.jpg</code> stimmt diese URL überein.",
  "wildcard_desc_question_ex2": "z.B.2) Pattern string = <code>IMG_???.jpg</code>",
  "wildcard_desc_question_ex2_info": "Dieser Mustervergleich findet alle URLs, die genau drei beliebige Zeichen zwischen <code>IMG_</code> und <code>.jpg</code> enthalten.",
  "wildcard_desc_asterisk": "Wildcard '*'",
  "wildcard_desc_asterisk_info": "'*' entspricht \"keinem oder mehreren Zeichen\".",
  "wildcard_desc_asterisk_ex": "z.B.) Pattern string = <code>IMG_*.jpg</code>",
  "wildcard_desc_asterisk_ex_info": "Wenn eine URL den Ausdruck 'kein oder mehrere Zeichen' zwischen <code>IMG_</code> und <code>.jpg</code> enthält, wird diese gefunden.",
  "wildcard_desc_asterisk_ex_info_ex": "Daher passt dieser Ausdruck sowohl auf <code>IMG_.jpg</code>, <code>IMG_000.jpg</code> als auch auf <code>IMG_000abc.jpg</code>.",
  "wildcard_desc_plus": "Wildcard'+'",
  "wildcard_desc_plus_info": "'+' entspricht \"mindestens einem oder mehreren Zeichen\".",
  "wildcard_desc_plus_ex": "z.B.) Pattern string = <code>IMG_+.jpg</code>",
  "wildcard_desc_plus_ex_info": "Wenn eine URL den Ausdruck 'mindestens ein oder mehrere Zeichen' zwischen <code>IMG_</code> and <code>.jpg</code> enthält, stimmt sie überein.",
  "wildcard_desc_plus_ex_not": "Daher trifft dieser Ausdruck sowohl auf <code>IMG_.jpg</code>, <code>IMG_000.jpg</code> als auch auf <code>IMG_000abc.jpg</code> zu.",
  "wildcard_desc_plus_ex_then": "Der Ausdruck trifft aber nicht zu, wenn nichts zwischen <code>IMG_</code> und <code>.jpg</code> steht.",
  "wildcard_desc_regexp": "Regulärer Ausdruck",
  "wildcard_desc_regexp_info": "Der in '[' und ']' eingeschlossene Mustervergleich wird als regulärer Ausdruck behandelt.<br>Reguläre Ausdrücke entsprechen den Java-Spezifikationen.",
  "wildcard_desc_regexp_ex": "z.B.) <code>[https?://wwww\\.test\\.com/IMG_*\\.jpg]</code>",
  "pattern_title": "Musterübereinstimmung",
  "pattern_info": "Wenn Sie ein Schema wie <code>http://</code> nicht anwenden, wird es automatisch ergänzt (es wird <code>^\\w+://</code> hinzugefügt)",
  "pattern_ex": "Wenn Sie ein Muster wie <code>*test.com</code> erstellen, passt es also zu einer URL, wie z.B. <code>http://other.com/?page=test.com</code>.",
  "pattern_sub_domain": "Wenn Sie eine Subdomain ersetzen möchten",
  "pattern_sub_domain_info": "Beginnen Sie mit <code>*.</code> oder <code>http://*.</code>. (<code>*.</code> wird intern durch <code>(?![./]).)*</code> ersetzt)",
  "pattern_sub_domain_ex": "z.B.) Pattern-String =<code>*.test.com</code>",
  "pattern_sub_domain_match": "Entspricht <code>mobile.test.com</code>, <code>doc.test.com</code>",
  "pattern_sub_domain_not": "etc. <code>mobile.doc.test.com</code> wird jedoch nicht gefunden, da die Subdomain einen <code>.</code> enthält.",
  "pattern_https": "Wenn der Mustervergleich mit <code>http*://</code> beginnt.",
  "pattern_https_info": "Dies ist nicht notwendig, da dieser Teil automatisch durch den Browser ergänzt wird.",
  "pattern_https_replace": "Diese Beschreibung wird intern durch <code>https?://</code>ersetzt, um Fehltreffer zu vermeiden.",
  "ad_block_title": "Werbeblocker",
  "ad_block_not_wildcard": "Wenn Sie keine Wildcard (Platzhalter) verwenden, wird es schneller gehen.",
  "ad_block_not_regex": "Darüber hinaus ist die Performance schlechter, wenn es einen komplexen Mustervergleich im regulären Ausdruck gibt.",
  "ad_block_not_use_wildcard": "Wenn Sie keine Wildcard (Platzhalter) verwenden (<code>#?*+</code>)",
  "ad_block_not_use_wildcard_info": "Wenn es eine spezifische Zeichenkette in der URL gibt, blockieren Sie diese.",
  "ad_block_not_use_wildcard_ex": "z.B.) Pattern string =<code>ad.jpg</code>",
  "ad_block_not_use_wildcard_ex_info": "blockiert <code>http://test.com/ad/ad.jpg</code>, <code>https://test.jp/ad/img/ad.jpg</code> etc.",
  "ad_block_use_wildcard": "Wenn Sie keine Wildcard (Platzhalter) verwenden (<code>#?*+</code>)",
  "ad_block_use_wildcard_info": "Weitere Informationen finden Sie in der Wildcardbeschreibung.",
  "ad_block_host": "Host-Sperre",
  "ad_block_host_info": "Sperrt alle spezifizierten Hosts.",
  "ad_block_host_perfect": "Vollständige Übereinstimmung",
  "ad_block_host_perfect_info": "<code>h ad.test.com</code>Fügt ein nachfolgendes Leerzeichen ein, auf das sich 'h' als Bezug ('as') bezieht.",
  "ad_block_host_perfect_info_ex": "Sinnvoll, um <code>http://ad.test.com</code> zu blockieren, ohne zugleich <code>http://test.com</code> zu blockieren.",
  "ad_block_host_perfect_info_wildcard": "Wildcards (Platzhalter) können verwendet werden.",
  "ad_block_host_perfect_ex": "z.B.) <code>h ad.+.com</code>, <code>h ad.test.*</code>",
  "ad_block_host_perfect_hosts": "<code>127.0.0.1 ad.com</code> Der Bezug ('as') kann auch im Host-Format angegeben werden.",
  "ad_block_host_partial": "Teilweise Übereinstimmung",
  "ad_block_host_partial_info": "<code>c ad.com</code>Fügt ein nachfolgendes Leerzeichen ein, auf das sich 'c' als Bezug ('as') bezieht.",
  "ad_block_host_partial_info_ex": "Blockiert <code>http://ad.com</code>, <code>http://abc.ad.com</code>, <code>http://ad001.ad.com</code> etc.",
  "ad_block_host_partial_not_wildcard": "Wildcards (Platzhalter) können NICHT verwendet werden.",
  "ad_block_host_regex": "Verwendung regulärer Ausdrücke in der Host-Sperre",
  "ad_block_host_regex_info": "<code>h [test\\.com]</code> der Bezug ('as') kann auch als regulärer Ausdruck angegeben werden."
}
